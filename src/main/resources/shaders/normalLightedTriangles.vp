// Copyright 2014 JogAmp Community. All rights reserved.

#if __VERSION__ >= 130
  #define attribute in
  #define varying out
#endif

uniform mat4 mgl_PMatrix;
uniform mat4 mgl_MVMatrix[NO_OF_INSTANCE];
uniform vec3 light_position;
uniform vec4 dummy;

uniform vec3 material_ambient;
uniform vec3 material_diffuse;
uniform vec3 material_specular;
uniform float material_specular_power;

attribute vec3  mgl_Vertex; 
//attribute vec4  mgl_Color; 
attribute vec3  mgl_Normal;
varying vec4    frontColor;
 
void main(void) { 
  vec3 N = mgl_Normal;
  vec3 L = normalize(light_position - mgl_Vertex);
    float LdotN = dot(N, L);
    vec3 R = reflect(-L, N);

    float diffuse = max(LdotN, 0.0);
    //float specular = max(pow(dot(normalize(-fragment.eye_coord), R), material_specular_power), 0.0);
    float specular = 0.2f;

    //float f = textureProj(depth_texture, fragment.shadow_coord);
    float f  = 1.0f;

    frontColor = vec4(material_ambient + f * (material_diffuse * diffuse + material_specular * specular), 1.0);
  
  
  //frontColor = mgl_Color; 
  //frontColor = dummy; 
  gl_Position = mgl_PMatrix * mgl_MVMatrix[gl_InstanceID] * vec4(mgl_Vertex, 1); 
} 
